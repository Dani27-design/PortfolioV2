{"version":3,"sources":["Assets/sertif1.png","Assets/sertif2.png","Assets/sertif3.png","Assets/sertif4.png","Assets/sertif5.png","Assets/sertif6.png","Assets/sertif7.png","Assets/sertif8.png","Assets/sertif9.png","Assets/sertif10.png","Assets/sertif11.png","Assets/sertif12.png","Assets/sertif13.png","Assets/sertif14.png","Assets/sertif15.png","Assets/sertif16.png","Components/Certification.jsx"],"names":["images","Sertif1","Sertif2","Sertif3","Sertif4","Sertif5","Sertif6","Sertif7","Sertif8","Sertif9","Sertif10","Sertif11","Sertif12","Sertif13","Sertif14","Sertif15","Sertif16","Certification","useState","imageIndex","setImageIndex","NextArrow","onClick","className","PrevArrow","settings","dots","infinite","lazyLoad","speed","slidesToShow","slidesToScroll","centerMode","centerPadding","variableWidth","variableHeight","nextArrow","prevArrow","beforeChange","current","next","customPaging","i","responsive","breakpoint","initialSlide","id","map","img","idx","zoomMargin","overlayBgColorStart","overlayBgColorEnd","src","alt","width"],"mappings":"uKAAe,G,cAAA,IAA0B,qCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,qCCA1B,MAA0B,qCCA1B,MAA0B,qCCA1B,MAA0B,qCCA1B,MAA0B,qCCA1B,MAA0B,qCCA1B,MAA0B,qC,yBCuBnCA,EAAS,CACXC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GA4FWC,UAzFf,WACI,MAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAY,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,OACI,qBAAKC,UAAU,OAAOD,QAASA,KAIjCE,EAAY,SAAC,GAAiB,IAAfF,EAAc,EAAdA,QACjB,OACI,qBAAKC,UAAU,OAAOD,QAASA,KAIjCG,EAAW,CACbC,MAAM,EACNC,UAAU,EACVC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,YAAY,EACZC,cAAe,EACfC,eAAe,EACfC,gBAAgB,EAChBC,UAAW,cAACf,EAAD,IACXgB,UAAW,cAACb,EAAD,IACXc,aAAc,SAACC,EAASC,GAAV,OAAmBpB,EAAcoB,IAC/CC,aAAc,SAAUC,GACpB,OACI,4BACI,qBAAKnB,UAAWmB,IAAMvB,EAAa,qBAAuB,mBAItEwB,WAAY,CACR,CACIC,WAAY,KACZnB,SAAU,CACNK,aAAc,EACdC,eAAgB,EAChBJ,UAAU,EACVkB,aAAc,IAGtB,CACID,WAAY,IACZnB,SAAU,CACNK,aAAc,EACdC,eAAgB,EAChBc,aAAc,IAGtB,CACID,WAAY,IACZnB,SAAU,CACNK,aAAc,EACdC,eAAgB,EAChBc,aAAc,MAM9B,OACI,qBAAKC,GAAG,gBAAR,SACI,sBAAKvB,UAAU,0BAAf,UACI,sBAAKA,UAAU,iCAAf,UACI,mBAAGA,UAAU,uBAAb,2BACA,mBAAGA,UAAU,qBAAb,uCAEJ,cAAC,IAAD,2BAAYE,GAAZ,aACKzB,EAAO+C,KAAI,SAACC,EAAKC,GAAN,OACR,qBAAK1B,UAAW0B,IAAQ9B,EAAa,oBAAsB,QAA3D,SACI,cAAC,IAAD,CACI+B,WAAYD,IAAQ9B,EAAa,GAAK,IACtCgC,oBAAoB,2BACpBC,kBAAkB,2BAHtB,SAII,qBAAKC,IAAKL,EAAKM,IAAKN,EAAKO,MAAO","file":"static/js/6.2cefcc8a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sertif1.39cb95cb.png\";","export default __webpack_public_path__ + \"static/media/sertif2.ffe16e41.png\";","export default __webpack_public_path__ + \"static/media/sertif3.c67054dc.png\";","export default __webpack_public_path__ + \"static/media/sertif4.9f7a5e4b.png\";","export default __webpack_public_path__ + \"static/media/sertif5.0c49c89b.png\";","export default __webpack_public_path__ + \"static/media/sertif6.5853b146.png\";","export default __webpack_public_path__ + \"static/media/sertif7.1afdf0cc.png\";","export default __webpack_public_path__ + \"static/media/sertif8.ed50d3aa.png\";","export default __webpack_public_path__ + \"static/media/sertif9.37613531.png\";","export default __webpack_public_path__ + \"static/media/sertif10.13d196e0.png\";","export default __webpack_public_path__ + \"static/media/sertif11.88440e9d.png\";","export default __webpack_public_path__ + \"static/media/sertif12.4f005f78.png\";","export default __webpack_public_path__ + \"static/media/sertif13.464f8312.png\";","export default __webpack_public_path__ + \"static/media/sertif14.3e9b396f.png\";","export default __webpack_public_path__ + \"static/media/sertif15.c472480a.png\";","export default __webpack_public_path__ + \"static/media/sertif16.b082f9c4.png\";","import React, { useState, useCallback } from 'react';\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Sertif1 from '../Assets/sertif1.png'\r\nimport Sertif2 from '../Assets/sertif2.png'\r\nimport Sertif3 from '../Assets/sertif3.png'\r\nimport Sertif4 from '../Assets/sertif4.png'\r\nimport Sertif5 from '../Assets/sertif5.png'\r\nimport Sertif6 from '../Assets/sertif6.png'\r\nimport Sertif7 from '../Assets/sertif7.png'\r\nimport Sertif8 from '../Assets/sertif8.png'\r\nimport Sertif9 from '../Assets/sertif9.png'\r\nimport Sertif10 from '../Assets/sertif10.png'\r\nimport Sertif11 from '../Assets/sertif11.png'\r\nimport Sertif12 from '../Assets/sertif12.png'\r\nimport Sertif13 from '../Assets/sertif13.png'\r\nimport Sertif14 from '../Assets/sertif14.png'\r\nimport Sertif15 from '../Assets/sertif15.png'\r\nimport Sertif16 from '../Assets/sertif16.png'\r\nimport Zoom from 'react-medium-image-zoom'\r\nimport 'react-medium-image-zoom/dist/styles.css'\r\n\r\nconst images = [\r\n    Sertif1,\r\n    Sertif2,\r\n    Sertif3,\r\n    Sertif4,\r\n    Sertif5,\r\n    Sertif6,\r\n    Sertif7,\r\n    Sertif8,\r\n    Sertif9,\r\n    Sertif10,\r\n    Sertif11,\r\n    Sertif12,\r\n    Sertif13,\r\n    Sertif14,\r\n    Sertif15,\r\n    Sertif16,\r\n]\r\n\r\nfunction Certification() {\r\n    const [imageIndex, setImageIndex] = useState(0)\r\n\r\n    const NextArrow = ({ onClick }) => {\r\n        return (\r\n            <div className='next' onClick={onClick}></div>\r\n        )\r\n    };\r\n\r\n    const PrevArrow = ({ onClick }) => {\r\n        return (\r\n            <div className='prev' onClick={onClick}></div>\r\n        )\r\n    };\r\n\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        lazyLoad: false,\r\n        speed: 300,\r\n        slidesToShow: 3,\r\n        slidesToScroll: 1,\r\n        centerMode: true,\r\n        centerPadding: 0,\r\n        variableWidth: true,\r\n        variableHeight: true,\r\n        nextArrow: <NextArrow />,\r\n        prevArrow: <PrevArrow />,\r\n        beforeChange: (current, next) => setImageIndex(next),\r\n        customPaging: function (i) {\r\n            return (\r\n                <a>\r\n                    <div className={i === imageIndex ? \"dots-slider-active\" : \"dots-slider\"}></div>\r\n                </a>\r\n            );\r\n        },\r\n        responsive: [\r\n            {\r\n                breakpoint: 1024,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1,\r\n                    infinite: true,\r\n                    initialSlide: 1\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 600,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1,\r\n                    initialSlide: 1\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 480,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1,\r\n                    initialSlide: 1\r\n                }\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <div id=\"certification\">\r\n            <div className=\"container-certification\">\r\n                <div className=\"container-header-certification\">\r\n                    <p className=\"header-certification\">Certification</p>\r\n                    <p className=\"teks-certification\">This is my achievement</p>\r\n                </div>\r\n                <Slider {...settings}>\r\n                    {images.map((img, idx) => (\r\n                        <div className={idx === imageIndex ? \"slide activeSlide\" : \"slide\"}>\r\n                            <Zoom\r\n                                zoomMargin={idx === imageIndex ? 40 : 100}\r\n                                overlayBgColorStart='rgba(218, 218, 218, 0.5)'\r\n                                overlayBgColorEnd='rgba(129, 129, 129, 0.9)'>\r\n                                <img src={img} alt={img} width={300} />\r\n                            </Zoom>\r\n                        </div>\r\n                    ))}\r\n                </Slider>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Certification"],"sourceRoot":""}