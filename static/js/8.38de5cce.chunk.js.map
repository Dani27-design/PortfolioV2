{"version":3,"sources":["Components/Viewport.jsx","Components/Navbar.jsx","Components/Header.jsx"],"names":["WindowView","useState","x_left","x_right","y_top","y_bottom","view","setView","handleView","window","pageXOffset","innerWidth","pageYOffset","innerHeight","useEffect","addEventListener","removeEventListener","SmoothScroll","targetId","duration","targetPosition","document","querySelector","getBoundingClientRect","top","startPosition","startTime","ease","t","b","c","d","requestAnimationFrame","animation","currentTime","timeElapsed","run","scrollTo","Navbar","nav","setnav","seo","setSeo","isOpen","setOpen","scrollY","pathname","useLocation","timer","links","querySelectorAll","forEach","link","i","event","preventDefault","getAttribute","setTimeout","navigation","classList","add","remove","Helmet","title","defer","className","href","name","src","process","alt","customBurgerIcon","customCrossIcon","width","onOpen","disableAutoFocus","Header","anime","setanime","theme","setTheme","body","TeksGerak","typeTarget","useRef","typed","Typed","current","strings","typeSpeed","loop","destroy","ref","id","onClick","open","reset","textColor","backgroundColor","place"],"mappings":"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","file":"static/js/8.38de5cce.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst WindowView = () => {\r\n    const [view, setView] = useState({\r\n        x_left: 0,\r\n        x_right: 0,\r\n        y_top: 0,\r\n        y_bottom: 0,\r\n    });\r\n\r\n    const handleView = () => {\r\n        setView({\r\n            x_left: window.pageXOffset,\r\n            x_right: window.pageXOffset + window.innerWidth,\r\n            y_top: window.pageYOffset,\r\n            y_bottom: window.pageYOffset + window.innerHeight,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", handleView);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", handleView);\r\n        };\r\n    }, []);\r\n\r\n    return view;\r\n};\r\n\r\n// http://www.gizma.com/easing/\r\nconst SmoothScroll = ({ targetId, duration }) => {\r\n    const targetSection = document.querySelector(\"#\" + targetId);\r\n    var targetPosition = targetSection.getBoundingClientRect().top;\r\n    // console.log(targetPosition, targetSection.offsetTop);\r\n    var startPosition = window.pageYOffset;\r\n    var startTime = null;\r\n\r\n    const animation = (currentTime) => {\r\n        if (startTime === null) startTime = currentTime;\r\n        var timeElapsed = currentTime - startTime;\r\n        var run = ease(timeElapsed, startPosition, targetPosition, duration);\r\n        window.scrollTo(0, run);\r\n\r\n        if (timeElapsed < duration) requestAnimationFrame(animation);\r\n    };\r\n\r\n    const ease = (t, b, c, d) => {\r\n        t /= d / 2;\r\n        if (t < 1) return (c / 2) * t * t + b;\r\n        t--;\r\n        return (-c / 2) * (t * (t - 2) - 1) + b;\r\n    };\r\n\r\n    requestAnimationFrame(animation);\r\n};\r\n\r\nexport { WindowView, SmoothScroll };\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { WindowView, SmoothScroll } from \"./Viewport\";\r\nimport { bubble as Menu } from 'react-burger-menu'\r\nimport { Helmet } from 'react-helmet';\r\n\r\nfunction Navbar() {\r\n    const [nav, setnav] = useState(false);\r\n    const [seo, setSeo] = useState('Daniansyah');\r\n    const [isOpen, setOpen] = useState(false);\r\n\r\n    const changeBackground = () => {\r\n        if (window.scrollY >= 50) {\r\n            setnav(true);\r\n            setOpen(false);\r\n        } else {\r\n            setnav(false);\r\n        }\r\n    }\r\n    window.addEventListener('scroll', changeBackground);\r\n\r\n    const { y_top } = WindowView();\r\n    const { pathname } = useLocation();\r\n    let timer = 0;\r\n\r\n    //NAVI WITH WIDTH 800px\r\n    useEffect(() => {\r\n        const links = document.querySelectorAll(\".link-con .navi-link\");\r\n\r\n        if (pathname !== \"/\") {\r\n            timer = 100;\r\n        }\r\n\r\n        //TOGGLE LINK ACTIVE\r\n        links.forEach((link, i) => {\r\n            link.addEventListener(\"click\", (event) => {\r\n                event.preventDefault();\r\n                //SMOOTH SCROLL\r\n                const targetId = link.getAttribute(\"name\");\r\n                if (targetId === \"home\") {\r\n                    setSeo(\"Daniansyah\")\r\n                }\r\n                if (targetId === \"project\") {\r\n                    setSeo(\"Daniansyah | Project\")\r\n                }\r\n                if (targetId === \"certification\") {\r\n                    setSeo(\"Daniansyah | Certification\")\r\n                }\r\n                if (targetId === \"contact\") {\r\n                    setSeo(\"Daniansyah | Contact\")\r\n                }\r\n                const duration = 1000;\r\n                setTimeout(() => {\r\n                    SmoothScroll({ targetId, duration });\r\n                    timer = 0;\r\n                }, timer);\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    //TOGGLE NAV BACKGROUND COLOR\r\n    useEffect(() => {\r\n        const navigation = document.querySelector(\"nav\");\r\n\r\n        if (y_top > 0) {\r\n            navigation.classList.add(\"active\");\r\n        } else {\r\n            navigation.classList.remove(\"active\");\r\n        }\r\n    }, [y_top]);\r\n\r\n    const handleIsOpen = () => {\r\n        setOpen(!isOpen)\r\n    }\r\n\r\n    const closeSideBar = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet title={seo} defer={false} />\r\n            <nav className={nav ? 'nav active' : 'nav'}>\r\n                <div className=\"link-con logo-gambar\">\r\n                    <a href=\"home\" name=\"home\" className=\"navi-link logo-navbar\">DC<img className=\"dot-navbar\" src={`${process.env.PUBLIC_URL}/dot-navbar.png`} alt=\"\" /></a>\r\n                </div>\r\n\r\n                <div className=\"link-con menu\">\r\n                    <a href=\"project\" name=\"project\" className=\"navi-link\">Project</a>\r\n                    <a href=\"certification\" name=\"certification\" className=\"navi-link\">Certification</a>\r\n                    <a href=\"contact\" name=\"contact\" className=\"navi-link\">Contact</a>\r\n                </div>\r\n            </nav>\r\n\r\n            <Menu\r\n                customBurgerIcon={<img className=\"menu-icon\" src={`${process.env.PUBLIC_URL}/Menu.svg`} alt=\"\" />}\r\n                customCrossIcon={<img className=\"close-icon\" src={`${process.env.PUBLIC_URL}/Close.svg`} alt=\"\" />}\r\n                width={'80%'}\r\n                isOpen={isOpen}\r\n                onOpen={handleIsOpen}\r\n                disableAutoFocus>\r\n                <nav className='navi'>\r\n                    <div className=\"link-con menu\">\r\n                        <a href=\"home\" className=\"navi-link logo-navbar\">DC<img className=\"dot-navbar\" src={`${process.env.PUBLIC_URL}/dot-navbar.png`} alt=\"\" /></a>\r\n                        <a href=\"project\" className=\"navi-link\">Project</a>\r\n                        <a href=\"certification\" className=\"navi-link\">Certification</a>\r\n                        <a href=\"contact\" className=\"navi-link\">Contact</a>\r\n                    </div>\r\n                </nav>\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport Navbar from './Navbar'\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { WindowView, SmoothScroll } from \"./Viewport\";\r\nimport Typed from 'typed.js';\r\nimport Tilt from 'react-parallax-tilt';\r\nimport { Helmet } from 'react-helmet';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nfunction Header() {\r\n    const [anime, setanime] = useState(false);\r\n    const [theme, setTheme] = useState(false);\r\n    const [seo, setSeo] = useState('Daniansyah');\r\n\r\n    const setActive = () => {\r\n        if (window.scrollY >= 50) {\r\n            setanime(true);\r\n        } else {\r\n            setanime(false);\r\n        }\r\n    }\r\n    window.addEventListener('scroll', setActive);\r\n\r\n    if (theme) {\r\n        document.body.classList.add(\"light-theme\");\r\n    } else {\r\n        document.body.classList.remove(\"light-theme\");\r\n    }\r\n\r\n    const { y_top } = WindowView();\r\n    const { pathname } = useLocation();\r\n    let timer = 0;\r\n\r\n    useEffect(() => {\r\n        const links = document.querySelectorAll(\".container-button .button\");\r\n\r\n        if (pathname !== \"/\") {\r\n            timer = 100;\r\n        }\r\n\r\n        //TOGGLE LINK ACTIVE\r\n        links.forEach((link, i) => {\r\n            link.addEventListener(\"click\", (event) => {\r\n                event.preventDefault();\r\n                //SMOOTH SCROLL\r\n                const targetId = link.getAttribute(\"name\");\r\n                if (targetId === \"project\") {\r\n                    setSeo(\"Daniansyah | Project\")\r\n                }\r\n                const duration = 1000;\r\n                setTimeout(() => {\r\n                    SmoothScroll({ targetId, duration });\r\n                    timer = 0;\r\n                }, timer);\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    //TOGGLE NAV BACKGROUND COLOR\r\n    useEffect(() => {\r\n        const navigation = document.querySelector(\"nav\");\r\n\r\n        if (y_top > 0) {\r\n            navigation.classList.add(\"active\");\r\n        } else {\r\n            navigation.classList.remove(\"active\");\r\n        }\r\n    }, [y_top]);\r\n\r\n    const TeksGerak = () => {\r\n        const typeTarget = useRef(null);\r\n\r\n        useEffect(() => {\r\n            const typed = new Typed(typeTarget.current, {\r\n                strings: [\"Daniansyah\", \"Frontend Developer\", \"Mobile Developer\", \"UI Designer\"],\r\n                typeSpeed: 40,\r\n                loop: true\r\n            });\r\n\r\n            return () => {\r\n                typed.destroy();\r\n            };\r\n        }, []);\r\n\r\n        return <span ref={typeTarget} />;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div id='home'>\r\n                <Helmet title={seo} defer={true} />\r\n                <Navbar />\r\n                <div className='hero'>\r\n                    <div className='kiri'>\r\n                        <p className='teks-hello'>Hello</p>\r\n                        <div className=\"container-teks-gerak\">\r\n                            <p className='teks-gerak'>Im <TeksGerak /></p>\r\n                            <img src={`${process.env.PUBLIC_URL}/dot.svg`} alt=\"\" className=\"dot-teks\" />\r\n                        </div>\r\n                        <p className='teks-about'>Are u know me so well? Let me introduce myself :)</p>\r\n                        <div className=\"container-button\">\r\n                            <a\r\n                                href=\"-\"\r\n                                className=\"button\"\r\n                                onClick={() => {\r\n                                    window.open(\"mailto:muhammad.19043@mhs.unesa.ac.id?subject=I%20Want%20To%20Hire%20You&body=I%20need%20\", \"_self\");\r\n                                }}>Hire Me</a>\r\n                            <a\r\n                                href=\"-\"\r\n                                className=\"button\"\r\n                                onClick={() => {\r\n                                    window.open(\"https://drive.google.com/file/d/17CUOqM02Jq2S17qY6S64cfXwuquVF5nS/view?usp=sharing\", \"_self\");\r\n                                }}>Get CV</a>\r\n                            <a href=\"project\" name=\"project\" className=\"button\">Project</a>\r\n                        </div>\r\n                    </div>\r\n                    <Tilt reset={true}>\r\n                        <div className='gambar-header'>\r\n                            <img src={`${process.env.PUBLIC_URL}/header-image.png`} alt=\"\" className='gambar-header' />\r\n                        </div>\r\n                    </Tilt>\r\n                </div>\r\n                <img\r\n                    data-for='bubble'\r\n                    data-tip='Click me'\r\n                    onClick={() => setTheme(!theme)}\r\n                    src={`${process.env.PUBLIC_URL}/lolisister.gif`}\r\n                    alt=\"\"\r\n                    className={anime ? 'anime-active' : 'anime'} />\r\n                <ReactTooltip\r\n                    id='bubble'\r\n                    className='bubble'\r\n                    textColor={theme ? '#fff' : '#252525'}\r\n                    backgroundColor={theme ? '#252525' : '#fff'}\r\n                    place='left' />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n"],"sourceRoot":""}